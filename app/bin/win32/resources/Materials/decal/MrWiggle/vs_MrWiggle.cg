

/*********** vertex shader ******/

void MrWiggleVS(


	float3 Position	: POSITION,
    float4 UVIN		: TEXCOORD0,
    float4 Normal	: NORMAL,
	
	out float4 HPosition	: POSITION,
    out float2 UV		: TEXCOORD0,
    out float3 WorldNormal	: TEXCOORD1,
    out float3 WorldView	: TEXCOORD2,
    out float3 WorldLightDir: TEXCOORD3,
    out float4 diffCol	: COLOR0,
    out float4 specCol	: COLOR1,
    
	uniform float4x4 WorldITXf, // our four standard "untweakable" xforms
	uniform float4x4 WorldXf,
	uniform float4x4 ViewIXf,
	uniform float4x4 WvpXf,
    uniform float3 SurfaceColor,
    uniform float SpecExpon,
    uniform float Horizontal,
    uniform float Vertical,
    uniform float3 LampPos,
    uniform float3 LampColor,
    uniform float3 AmbiColor,
    uniform float Timer,
    uniform float TimeScale
) {
    float3 Nn = normalize(mul(WorldITXf,Normal).xyz);
    float TimeNow = Timer*TimeScale;
    float4 Po = float4(Position.xyz,1);
    float iny = Po.y * Vertical + TimeNow;
    float wiggleX = sin(iny) * Horizontal;
    float wiggleY = cos(iny) * Horizontal; // deriv
    Nn.y = Nn.y + wiggleY;
    Nn = normalize(Nn);
    WorldNormal = Nn;
    Po.x = Po.x + wiggleX;
    HPosition = mul(WvpXf,Po);
    float3 Pw = mul(WorldXf,Po).xyz;
    float3 Ln = normalize(LampPos - Pw);
    WorldLightDir = Ln;
    float ldn = dot(Ln,Nn);
    float diffComp = max(0,ldn);
    float3 diffContrib = SurfaceColor * ( diffComp * LampColor + AmbiColor);
    diffCol = float4(diffContrib,1);
    UV = UVIN.xy;
    float3 Vn = normalize(float3(ViewIXf[0].w,ViewIXf[1].w,ViewIXf[2].w) - Pw);
    WorldView = Vn;
    float3 Hn = normalize(Vn + Ln);
    float hdn = pow(max(0,dot(Hn,Nn)),SpecExpon);
    specCol = float4(hdn * LampColor,1);
}
