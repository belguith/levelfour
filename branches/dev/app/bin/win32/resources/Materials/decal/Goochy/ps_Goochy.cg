

/*********** pixel shader ******/

void gooch_shared(

		float3 LightVec	: TEXCOORD1,
		float3 WorldNormal	: TEXCOORD2,
		float3 WorldView	: TEXCOORD5,
		
		float3 LiteColor,
		float3 DarkColor,
		float3 WarmColor,
		float3 CoolColor,
		float3 SpecColor,
		float GlossTop,
		float GlossBot,
		float GlossDrop,
		float SpecExpon,
		
		out float4 DiffuseContrib,
		out float4 SpecularContrib)
{
    float3 Ln = normalize(LightVec.xyz);
    float3 Nn = normalize(WorldNormal);
    float3 Vn = normalize(WorldView);
    float3 Hn = normalize(Vn + Ln);
    float hdn = pow(max(0,dot(Hn,Nn)),SpecExpon);
    float g_Min = min(GlossBot,GlossTop);
    float g_Max = max(GlossBot,GlossTop);
    float g_Dr = (1.0 - GlossDrop);
    hdn = hdn * (GlossDrop+smoothstep(g_Min,g_Max,hdn)*g_Dr);
    float ldn = dot(Ln,Nn);
    SpecularContrib = float4((hdn * SpecColor),1);
    float mixer = 0.5 * (ldn + 1.0);
    float3 surfColor = lerp(DarkColor,LiteColor,mixer);
    float3 toneColor = lerp(CoolColor,WarmColor,mixer);
    DiffuseContrib = float4((surfColor + toneColor),1);
}

float4 goochyPS(

		float4 HPosition	: POSITION,
		float2 UV		: TEXCOORD0,
		float3 LightVec	: TEXCOORD1,
		float3 WorldNormal	: TEXCOORD2,
		float3 WorldTangent	: TEXCOORD3,
		float3 WorldBinormal : TEXCOORD4,
		float3 WorldView	: TEXCOORD5,
		
		uniform float3 LiteColor,
		uniform float3 DarkColor,
		uniform float3 WarmColor,
		uniform float3 CoolColor,
		uniform float3 SpecColor,
		uniform float GlossTop,
		uniform float GlossBot,
		uniform float GlossDrop,
		uniform float SpecExpon
) :COLOR
{
    float4 diffContrib;
    float4 specContrib;
	gooch_shared(LightVec,WorldNormal,WorldView,LiteColor,DarkColor,
			WarmColor,CoolColor,
			SpecColor,
			GlossTop,GlossBot,GlossDrop,
			SpecExpon,diffContrib,specContrib);
    float4 result = diffContrib + specContrib;
    return result;
}

float4 goochyT_PS(

		float4 HPosition	: POSITION,
		float2 UV		: TEXCOORD0,
		float3 LightVec	: TEXCOORD1,
		float3 WorldNormal	: TEXCOORD2,
		float3 WorldTangent	: TEXCOORD3,
		float3 WorldBinormal : TEXCOORD4,
		float3 WorldView	: TEXCOORD5,
		
		uniform float3 LiteColor,
		uniform float3 DarkColor,
		uniform float3 WarmColor,
		uniform float3 CoolColor,
		uniform sampler2D ColorSampler : register(s0),
		uniform float3 SpecColor,
		uniform float GlossTop,
		uniform float GlossBot,
		uniform float GlossDrop,
		uniform float SpecExpon
) :COLOR
{
    float4 diffContrib;
    float4 specContrib;
	gooch_shared(LightVec,WorldNormal,WorldView,LiteColor,DarkColor,
			WarmColor,CoolColor,
			SpecColor,
			GlossTop,GlossBot,GlossDrop,
			SpecExpon,diffContrib,specContrib);
    float4 result = tex2D(ColorSampler,UV.xy)*diffContrib + specContrib;
    return result;
}