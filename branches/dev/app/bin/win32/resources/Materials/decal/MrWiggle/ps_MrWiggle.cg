

/********* pixel shader ********/

float4 MrWigglePS(

			float4 HPosition	: POSITION,
			float2 UV		: TEXCOORD0,
			float3 WorldNormal	: TEXCOORD1,
			float3 WorldView	: TEXCOORD2,
			float3 WorldLightDir: TEXCOORD3,
			float4 diffCol	: COLOR0,
			float4 specCol	: COLOR1,
	
		    uniform float3 SurfaceColor,
		    uniform float SpecExpon,
		    uniform float3 LampColor,
		    uniform float3 AmbiColor
) : COLOR {
    float3 Nn = normalize(WorldNormal);
    float3 Ln = normalize(WorldLightDir);
    float3 Vn = normalize(WorldView);
    float3 Hn = normalize(Vn + Ln);
    float ldn = dot(Ln,Nn);
    float hdn = dot(Hn,Nn);
    float4 litV = lit(ldn,hdn,SpecExpon);
    float3 diffContrib = SurfaceColor * ( litV.y * LampColor + AmbiColor);
    float3 specContrib = litV.y * litV.z * LampColor;
    float3 result = diffContrib + specContrib;
    // float4 result = diffCol + specCol;
    return float4(result.xyz,1.0);
}

float4 MrWigglePS_t(

			float4 HPosition	: POSITION,
			float2 UV		: TEXCOORD0,
			float3 WorldNormal	: TEXCOORD1,
			float3 WorldView	: TEXCOORD2,
			float3 WorldLightDir: TEXCOORD3,
			float4 diffCol	: COLOR0,
			float4 specCol	: COLOR1,
	
		    uniform float3 SurfaceColor,
		    uniform sampler2D ColorSampler : register(s0),
		    uniform float SpecExpon,
		    uniform float3 LampColor,
		    uniform float3 AmbiColor
) : COLOR {
    float3 Nn = normalize(WorldNormal);
    float3 Ln = normalize(WorldLightDir);
    float3 Vn = normalize(WorldView);
    float3 Hn = normalize(Vn + Ln);
    float ldn = dot(Ln,Nn);
    float hdn = dot(Hn,Nn);
    float4 litV = lit(ldn,hdn,SpecExpon);
    float3 map = tex2D(ColorSampler,UV).xyz;
    float3 diffContrib = map * SurfaceColor * ( litV.y * LampColor + AmbiColor);
    float3 specContrib = litV.y * litV.z * LampColor;
    float3 result = diffContrib + specContrib;
    // float4 result = diffCol + specCol;
    return float4(result.xyz,1.0);
}
