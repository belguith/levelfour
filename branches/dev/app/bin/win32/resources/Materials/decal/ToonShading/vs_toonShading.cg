void toonShadingVS(

				float4 position : POSITION,
                float3 normal   : NORMAL,

                out float4 oPosition    : POSITION,
				out float diffuseLight  : TEXCOORD0,
				out float specularLight : TEXCOORD1,
				out float edge          : TEXCOORD2,
				   
               uniform float3 lightPosition,          // Light Position (in object space)
               uniform float3 eyePosition,            // Eye Position (in object space)
               uniform float shininess,

               uniform float4x4 modelViewProj)
{
  oPosition = mul(modelViewProj, position);
    
  // Calculate diffuse lighting
  float3 N = normalize(normal);
  float3 L = normalize(lightPosition - position.xyz);
  diffuseLight = max(0, dot(L, N));
	   
  // Calculate specular lighting
  float3 V = normalize(eyePosition - position.xyz);
  float3 H = normalize(L + V);
  specularLight = pow(max(0, dot(H, N)), shininess);
  if (diffuseLight<=0) specularLight = 0;

  // Perform edge detection
  edge = max(0, dot(V, N));	
}
