######################################################################
# VTK Designer 2 - D2M component
# 
# Autogenerated using VNFComponentGen
######################################################################

include(../Components.pri)
include(../../VTK.pri)

MOC_DIR         = $${PROJECT_BASE}/tmp/D2M
OBJECTS_DIR     = $${PROJECT_BASE}/tmp/D2M
UI_HEADERS_DIR  = $${PROJECT_BASE}/tmp/D2M
RCC_DIR         = $${PROJECT_BASE}/tmp/D2M
UI_DIR          = $${PROJECT_BASE}/tmp/D2M

# Additional includes from the system
INCLUDEPATH     += $${PROJECT_BASE}/Common \
                   D:/L4/src/boost/boost_1_42/ \
                   $${PROJECT_BASE}/Components/D2M/interfaces

# Input for linker
HEADERS += source/D2MComponent.h \
           source/sampleGraphVisNode.h \
           source/circleGraphLayoutVisNode.h \
           interfaces/IBoostGraphIOData.h \
           interfaces/CBoostGraphData.h \
           interfaces/IBoostPositionMapIOData.h \
           interfaces/CBoostPositionMapData.h \

SOURCES += source/D2MComponent.cpp \
           source/sampleGraphVisNode.cpp \
           source/circleGraphLayoutVisNode.cpp \
           interfaces/CBoostGraphData.cpp \
           interfaces/CBoostPositionMapData.cpp \

LIBS += -losgd \
        -losgDBd \

# VNFComponentGen has generated an empty resource file. If you add
# new objects to the resource file, then you can uncomment the line
# below
# RESOURCES += D2M.qrc

# Nodes in VTK Designer 2 have to implement one or more node interfaces
# Implementing all of them from scratch would be a tough task. So, we make
# use of ready made implementations and then subclass from them.
HEADERS   +=  $${PROJECT_BASE}/Common/CGenericVisNodeDesc.h \
              $${PROJECT_BASE}/Common/CGenericVisNodeBase.h 

SOURCES   +=  $${PROJECT_BASE}/Common/CGenericVisNodeDesc.cpp \
              $${PROJECT_BASE}/Common/CGenericVisNodeBase.cpp 


# IOData classes. These classes are so small, that they can actually be inline implementations.
# So there is really no need to worry about code size

            
